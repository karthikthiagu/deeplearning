
layer{
	name: "data"
	type: "Data"
	top: "data"
	top: "label"
	include{	
		phase: TRAIN
	}
	transform_param{
		mean_file: "examples/cifar10/mean.binaryproto"
	}	
	data_param{	
		source: "examples/cifar10/cifar10_train_lmdb"
		batch_size: 100
		backend: LMDB
	}			
}
layer{
        name: "data"
        type: "Data"
        top: "data"
        top: "label"
        include{
                phase: TEST
        }
        transform_param{
                mean_file: "examples/cifar10/mean.binaryproto"
        }
        data_param{
                source: "examples/cifar10/cifar10_test_lmdb"
                batch_size: 100
                backend: LMDB
        }
}
	
layer{
	name: "conv1"
	type: "Convolution"
	bottom: "data"	
	top: "conv1"
	param{
		lr_mult: 1
	}
	param{
		lr_mult:1
	}	
	convolution_param{	
		num_output: 32
		pad: 2
		kernel_size: 5
		stride: 1
		weight_filler{
			type: "gaussian"
			std: 1
		}
		bias_filler{
			type: "constant"
		}
	}
}
layer{
	name: "pool1"
	type: "Pooling"
	bottom: "conv1"
	top: "pool1"
	pooling_param{
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}
layer{
	name: "encode1"
	type: "Sigmoid"
	bottom: "pool1"
	top: "encode1neuron"
}
layer{
	name: "conv2"
	type: "Convolution"
	bottom: "encode1neuron"
	top: "conv2"
	param{
		lr_mult: 1
	}
	param{
		lr_mult: 1
	}
	convolution_param{
		num_output: 16
		kernel_size: 5
		pad: 2
		stride: 1
		weight_filler{
                        type: "gaussian"
                        std: 1
                }
                bias_filler{
                        type: "constant"
                }
	}
}
layer{
	name: "pool2"
	type: "Pooling"
	bottom: "conv2"	
	top: "pool2"
	pooling_param{
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}
layer{
	name: "encode2neuron"
	type: "Sigmoid"	
	bottom: "pool2"
	top: "encode2neuron"
}
layer{
	name: "ip1"
	type: "InnerProduct"
	bottom: "encode2neuron"
	top: "ip1"
	param{
		lr_mult: 1
		decay_mult: 2
	}
	param{
		lr_mult: 1
		decay_mult: 1
	}
	inner_product_param{
		num_output:10
		weight_filler{
                        type: "gaussian"
                        std: 0.1
                }
                bias_filler{
                        type: "constant"
                }

	}
}
layer{
	name: "prob"
	type: "SoftmaxWithLoss"
	bottom: "ip1"
	bottom: "label"
	top: "prob"
}
layer{
	name: "acc"
	type: "Accuracy"
	bottom: "ip1"
	bottom: "label"
	top: "acc"
	include{
		phase: TEST
	}
}
